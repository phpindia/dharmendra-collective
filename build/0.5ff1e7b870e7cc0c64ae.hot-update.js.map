{"version":3,"file":"0.5ff1e7b870e7cc0c64ae.hot-update.js","sources":["/home/deligence/Music/devlopment/collectivetemp/src/views/PollDetails/PollDetails.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Row, Col, Table, Button, ButtonToolbar } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport Card from \"components/Card/Card.jsx\";\n//import { pollsHeding, thArray, tdArray } from \"variables/Variables.jsx\";\nimport moment from 'moment';\n//const moment = require('moment');\n\nimport firebaseConf from '../../config';\n\nclass PollDetails extends Component {\n  constructor(props) {\n    console.log(\"details props==========>\", props.location.query);\n    super(props);\n    this.state = {\n        data: [],\n        pollId: props.location.query,\n        alert: false,\n        alertData: {}\n    };\n  }\n\n  componentDidMount(e) {\n\n    const { pollId } = this.state;\n    var pollRef = firebaseConf.database().ref('polls/' + pollId);\n\n    pollRef.on(\"value\", function(data) {\n      console.log(\"poll details data ===========>\",data.val());\n      const tempData = data.val();\n      tempData.id = data.key;\n      console.log(\"key------------\", tempData);\n      this.setState({\n        data: tempData\n      });\n    }.bind(this), function (error) {\n      console.log(\"Error: \" + error.code2);\n    });\n  }\n\n  deletePoll = (event,id) => {\n    event.preventDefault();\n\n    // Remove single polls\n    const  isDeleted = firebaseConf.database().ref('polls/' + id).remove();\n    console.log(\"poll deleted.......................\", id);\n  }\n\n  render() {\n    const { data } = this.state;\n    const pollData = data.data;\n    const pollId = data.id;\n    console.log(\"pollid=======>\", pollId);\n    console.log(\"poll data 44444\", data);\n    const formattedStartDate = moment(data.starDate*1000).format('L');\n    console.log(\"s date\", formattedStartDate);\n    const formattedEndDate = moment(data.endDate*1000).format('L');\n\n    if (!pollData) {\n        return 'loading........';\n    }\n\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col md={12}>\n              <Card\n                title=\"Poll Details\"\n                //category=\"Here you can see the number of Polls created\"\n                ctTableFullWidth\n                ctTableResponsive\n                content={\n                  <Table striped hover>\n                    <thead>\n                      <tr>\n                        <td><b>Title:</b> {data.title} {pollData.id}</td>\n                        <td>\n                          \n                            {/*<Button bsStyle=\"warning\" className=\"btn-fill\" bsSize=\"small\">\n                              <Link to={{ pathname: '/EditPoll', query: data.id  }}> Edit</Link>\n                            </Button>*/}\n                            <ButtonToolbar>\n                            <Button className=\"btn btn-fill btn-info pull-right\">\n                              <Link to={{ pathname: '/EditPoll', query: { pollId: data.id }}} >\n                                <font color=\"white\">Edit Poll</font>\n                              </Link>\n                            </Button>\n                            <Button className=\"btn btn-fill btn-default pull-right\">\n                              <Link to={{ pathname: '/PollsLIst'}} >\n                                <font color=\"white\">Back</font>\n                              </Link>\n                            </Button>\n                            </ButtonToolbar>\n                          \n                        </td>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td width=\"40%\"><b>Start Date:</b> {formattedStartDate}</td>\n                        <td width=\"60%\"><b>End Date:</b> {formattedEndDate}</td>\n                        <td></td>\n                        <td></td>\n                      </tr>\n                      <tr>\n                        <td width=\"40%\"><b>Options</b></td>\n                        <td width=\"60%\"><b>Description</b></td>\n                        <td>Image</td>\n                        <td>URL</td>\n                      </tr>\n                      {pollData.map(function(obj, key){\n                        let option = 'option'+ key;\n                        //let imageurl = \n                        return (\n                          <tr key={key}>\n                                <td width=\"40%\">{obj.option}</td>\n                                <td width=\"40%\">{obj.description}</td>\n                                <td><img src ={data[option]} width=\"25px\" height=\"25px\" /></td>\n                                {/*<td><img src =\"https://firebasestorage.googleapis.com/v0/b/collectivegiving.appspot.com/o/images%2Fnoimage.png?alt=media&token=927389dc-6626-4283-bfe2-ca09b28156a3\" height=\"30px\" width=\"30px\"/></td>*/}\n                                <td>{obj.url}</td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                }\n              />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default PollDetails;\n\n\n\n// WEBPACK FOOTER //\n// src/views/PollDetails/PollDetails.jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAFA;AACA;AADA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AAjwzBA;AAzBA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AADA;AADA;AAsEA;;;;AA3HA;AACA;AA6HA;;;;A","sourceRoot":""}